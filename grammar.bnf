#
# BNF grammar for ESQL language
# for BeepBeep2, a complex event
# processing program (06-2014)
#

<processors>		:= <0-1_processors> | <1-0_processors> | <1-1_processors>;

<0-1_processors>	:= <input_file> | <out_to_file>;

<1-0_processors>	:= <print>;

<1-1_processors>	:= <stdout> | <stderr>;

<file_processors>	:= <yaml>;


# 1 input 0 output
<print>			:= PRINT <trace> . |
			   PRINT ∘ <trace> . |
			   PRINT <print_opt> <trace> . |
			   PRINT <print_opt> ∘ <trace> .;

<print_opt>			:= Ɛ |
					   AT <number> PER SECOND ALL OF | 
					   AT <number> PER SECOND <number> OF | 
					   AT <number> PER SECOND | 
					   <number> OF |
					   ON KEY <string> ALL OF |             #<string>? , keyboard keys
					   ON KEY <string> <number> OF |
					   ON KEY <string> ;

#1 input 1 output
<stdout>		:= STDOUT <trace> .;

<stderr>		:= STDERR <trace> .;


#0 input 1 output

<input_file>	:= INPUT FILE <trace> .;

<out_to_file>	:= OUTPUT TO FILE <trace> .;

<yaml>			:= YAML <input_file> .;


<trace>			:= <string> | <filename> | <0-1_processor> | <1-1_processor> | <0-2_processor>;

<string>		:= " ^.* "; # match any character zero or more times
<filename>		:= " ^[\w\d\s.]+ ";
<digit>			:= ^[\d]*;
<key>			:= ^" [.]+ " | ^" f[\d] " | 
			   " ENTER " | " CTRL " | " ALT " | " SHIFT " | 
			   " TAB " | " ESC " | " CAPS " | " BACK_S " | " DEL " |
			   " HOME " | " END " | " PAGE_UP " | " PAGE_DOWN " | " NUM_LOCK " |
			   " DOWN_ARROW " | " UP_ARROW " | " LEFT_ARROW " | " RIGHT_ARROW ";